// <auto-generated />
using System;
using MD3.CatalogoSaaS.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MD3.CatalogoSaaS.Data.EF.Migrations
{
    [DbContext(typeof(CatalogoSaaSContext))]
    partial class CatalogoSaaSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ConfiguracaoDeConta", b =>
                {
                    b.Property<int?>("Conta_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Parametro_Id")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Conta_Id", "Parametro_Id");

                    b.HasIndex("Parametro_Id");

                    b.ToTable("ConfiguracoesDeContas", (string)null);
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ConfiguracaoDeSistema", b =>
                {
                    b.Property<int?>("Sistema_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Parametro_Id")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Sistema_Id", "Parametro_Id");

                    b.HasIndex("Parametro_Id");

                    b.ToTable("ConfiguracoesDeSistemas", (string)null);
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ContaDeSistema", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Plano_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Sistema_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Tenant_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Plano_Id");

                    b.HasIndex("Sistema_Id");

                    b.HasIndex("Tenant_Id");

                    b.ToTable("ContasDeSistema", (string)null);
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ParametroDoSistema", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("CodigoUnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("NivelDeConta")
                        .HasColumnType("bit");

                    b.Property<int?>("Sistema_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Sistema_Id", "CodigoUnico")
                        .IsUnique()
                        .HasFilter("[Sistema_Id] IS NOT NULL");

                    b.ToTable("ParametrosDosSistemas", (string)null);
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.PlanoDoSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sistema_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Sistema_Id");

                    b.ToTable("PlanosDosSistemas", (string)null);
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.Sistema", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("CodigoInterno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoInterno")
                        .IsUnique();

                    b.ToTable("Sistemas", (string)null);
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdGeral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PaiId")
                        .HasColumnType("int");

                    b.Property<int?>("Pai_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaiId");

                    b.ToTable("Tenants", (string)null);
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.Usuario", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTimeOffset?>("DataDeAlteracao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DataDeCadastro")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IdpIds")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("RelUsuarioContaDeSistema", b =>
                {
                    b.Property<int>("ContaDeSistemaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ContaDeSistemaId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RelUsuarioContaDeSistema");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ConfiguracaoDeConta", b =>
                {
                    b.HasOne("MD3.CatalogoSaaS.Model.ContaDeSistema", "Conta")
                        .WithMany("ConfiguracoesDaConta")
                        .HasForeignKey("Conta_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MD3.CatalogoSaaS.Model.ParametroDoSistema", "Parametro")
                        .WithMany("ConfiguracoesNasContas")
                        .HasForeignKey("Parametro_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("Parametro");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ConfiguracaoDeSistema", b =>
                {
                    b.HasOne("MD3.CatalogoSaaS.Model.ParametroDoSistema", "Parametro")
                        .WithMany("ConfiguracoesNosSistemas")
                        .HasForeignKey("Parametro_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MD3.CatalogoSaaS.Model.Sistema", "Sistema")
                        .WithMany("ConfiguracoesDoSistema")
                        .HasForeignKey("Sistema_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parametro");

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ContaDeSistema", b =>
                {
                    b.HasOne("MD3.CatalogoSaaS.Model.PlanoDoSistema", "Plano")
                        .WithMany("Contas")
                        .HasForeignKey("Plano_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MD3.CatalogoSaaS.Model.Sistema", "Sistema")
                        .WithMany("Contas")
                        .HasForeignKey("Sistema_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MD3.CatalogoSaaS.Model.Tenant", "Tenant")
                        .WithMany("Contas")
                        .HasForeignKey("Tenant_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Plano");

                    b.Navigation("Sistema");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ParametroDoSistema", b =>
                {
                    b.HasOne("MD3.CatalogoSaaS.Model.Sistema", "Sistema")
                        .WithMany("Parametros")
                        .HasForeignKey("Sistema_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.PlanoDoSistema", b =>
                {
                    b.HasOne("MD3.CatalogoSaaS.Model.Sistema", "Sistema")
                        .WithMany("Planos")
                        .HasForeignKey("Sistema_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.Tenant", b =>
                {
                    b.HasOne("MD3.CatalogoSaaS.Model.Tenant", "Pai")
                        .WithMany("Filhos")
                        .HasForeignKey("PaiId");

                    b.Navigation("Pai");
                });

            modelBuilder.Entity("RelUsuarioContaDeSistema", b =>
                {
                    b.HasOne("MD3.CatalogoSaaS.Model.ContaDeSistema", null)
                        .WithMany()
                        .HasForeignKey("ContaDeSistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RelUsuarioContaDeSistema_ContasDeSistema_ContaDeSistemaId");

                    b.HasOne("MD3.CatalogoSaaS.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RelUsuarioContaDeSistema_Usuarios_UsuarioId");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ContaDeSistema", b =>
                {
                    b.Navigation("ConfiguracoesDaConta");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.ParametroDoSistema", b =>
                {
                    b.Navigation("ConfiguracoesNasContas");

                    b.Navigation("ConfiguracoesNosSistemas");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.PlanoDoSistema", b =>
                {
                    b.Navigation("Contas");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.Sistema", b =>
                {
                    b.Navigation("ConfiguracoesDoSistema");

                    b.Navigation("Contas");

                    b.Navigation("Parametros");

                    b.Navigation("Planos");
                });

            modelBuilder.Entity("MD3.CatalogoSaaS.Model.Tenant", b =>
                {
                    b.Navigation("Contas");

                    b.Navigation("Filhos");
                });
#pragma warning restore 612, 618
        }
    }
}
